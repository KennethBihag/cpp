{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clean All",
            "type": "shell",
            "command": "${input:makePickList} clean"
        },
        {
            "label": "Windows GNU - build current file",
            "type": "shell",
            "command": "g++ -g -O2 -Wall -o '${fileDirname}/../bin/${fileBasenameNoExtension}.exe' '${file}'",
            "dependsOn": "create_bin_dir_for_file",
            "dependsOrder": "sequence"
        },
        {
            "label": "Linux - build current file",
            "type": "shell",
            "command": "g++ -g -O2 -Wall -o '${fileDirname}/../bin/${fileBasenameNoExtension}' '${file}'",
            "dependsOn": "create_bin_dir_for_file",
            "dependsOrder": "sequence"
        },
        {
            "label": "create_bin_dir_for_file",
            "type": "shell",
            "command": "if [ ! -d '${fileDirname}/../bin' ]; then mkdir '${fileDirname}/../bin'; fi;"
        },
        {
            "label": "clean_output_from_file",
            "type": "shell",
            "command": "if [ -d '${fileDirname}/../bin' ]; then rm -fr '${fileDirname}/../bin'; fi;",
            "problemMatcher": []
        },
        {
            "type": "cppbuild",
            "label": "Windows MSVC - build active dir",
            "command": "cl.exe",
            "args": [
                "/Zi",
                "/EHsc",
                "/nologo",
                "/Fe${config:custom.dfltOut}.exe",
                "/I../include",
                "*.c*"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$msCompile"
            ],
            "group": "build",
            "detail": "Compile all source files in current directory and build ${config:custom.dfltOut}.exe"
        }
    ],
    "inputs": [
        {
            "id": "makePickList",
            "type": "pickString",
            "description": "Type of make app",
            "default": "make",
            "options": [
                "make",
                "mingw32-make"
            ]
        }
    ]
}